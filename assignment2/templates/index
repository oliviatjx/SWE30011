<!DOCTYPE html>
<html>
<head>
    <title>IoT Pest Control System</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <style>
        body {
            font-family: Helvetica, Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            color: #333;
        }

        .container {
            width: 80%;
            margin: auto;
            overflow: hidden;
        }

        header {
            background: #333;
            color: #fff;
            padding-top: 30px;
            min-height: 70px;
            border-bottom: #77aaff 3px solid;
        }

        header a {
            color: #fff;
            text-decoration: none;
            text-transform: uppercase;
            font-size: 16px;
        }

        header ul {
            padding: 0;
            list-style: none;
        }

        header li {
            float: left;
            display: inline;
            padding: 0 20px 0 20px;
        }

        header #branding {
            float: left;
        }

        header #branding h1 {
            margin: 0;
        }

        header nav {
            float: right;
            margin-top: 10px;
        }

        #main {
            padding: 20px;
            background: #fff;
        }

        h1, h2 {
            color: #333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 15px;
            text-align: left;
        }

        canvas {
            max-width: 600px;
            margin: 20px auto;
            display: block;
        }

        button {
            background: #333;
            color: #fff;
            border: 0;
            padding: 10px 20px;
            cursor: pointer;
            text-transform: uppercase;
            margin: 10px 0;
        }

        button:hover {
            background: #77aaff;
        }

        #meanIRResult {
            font-size: 18px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div id="branding">
                <h1>IoT Pest Control System</h1>
            </div>
            <nav>
                <ul>
                    <li><a href="#" onclick="showHome()">Home</a></li>
                    <li><a href="#" onclick="showMeanPage()">Mean Values</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <div class="container" id="main">
        <div id="homeSection">
            <h1>Sensor Data</h1>
            <canvas id="sensorChart"></canvas>

            <h2>Sensor Data Table</h2>
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Timestamp</th>
                        <th>Distance</th>
                        <th>IR Value</th>
                    </tr>
                </thead>
                <tbody>
                    {% for row in data %}
                    <tr>
                        <td>{{ row[0] }}</td>
                        <td>{{ row[1] }}</td>
                        <td>{{ row[2] }}</td>
                        <td>{{ row[3] }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div id="meanSection" style="display:none;">
            <h2>Calculate Mean IR Value</h2>
            <button onclick="calculateMeanIR()">Calculate Mean IR Value</button>
            <p id="meanIRResult"></p>
        </div>
        
    </div>
    <button onclick="offLED()">Off LED</button>

    <script>
        // Fetch data from Flask endpoint
        fetch('/data')
        .then(response => response.json())
        .then(data => {
            console.log("Fetched Data:", data);  // Debugging log
            const labels = data.map(item => new Date(item.timestamp));
            const distances = data.map(item => item.distance);
            const irValues = data.map(item => item.ir_value);

            console.log("Labels:", labels);  // Debugging log
            console.log("Distances:", distances);  // Debugging log
            console.log("IR Values:", irValues);  // Debugging log

            const ctx = document.getElementById('sensorChart').getContext('2d');
            const sensorChart = new Chart(ctx, {
                type: 'line',  // Type of chart: line chart
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Distance',
                        data: distances,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: false
                    },
                    {
                        label: 'IR Value',
                        data: irValues,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                        fill: false
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'minute'
                            },
                            title: {
                                display: true,
                                text: 'Timestamp'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Values'
                            }
                        }
                    }
                }
            });
        })
        .catch(error => console.error('Error fetching data:', error));

        // Show Home section and hide Mean section
        function showHome() {
            document.getElementById('homeSection').style.display = 'block';
            document.getElementById('meanSection').style.display = 'none';
        }

        // Show Mean section and hide Home section
        function showMeanPage() {
            document.getElementById('homeSection').style.display = 'none';
            document.getElementById('meanSection').style.display = 'block';
        }

        // Fetch mean IR value and display it
        function calculateMeanIR() {
            fetch('/mean_ir_value', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('meanIRResult').textContent = `Mean IR Value: ${data.mean_ir_value}`;
                })
                .catch(error => console.error('Error calculating mean IR value:', error));
        }
        
        // Arduino Uno interaction added here
        function offLED() {
            fetch('/off_ledpin', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => console.log(data.status))
            .catch(error => console.error('Error:', error));
        }
    </script>
</body>
</html>
